<?xml version="1.0" encoding="utf-8"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">

  <xacro:macro
    name="rover_a1_robot"
    params="wheel_config_file
            controller_config_file
            use_sim:=false
            imu_xyz:='0.052 0.073 -0.006'
            imu_rpy:='0.0 0.0 -1.57'
            namespace:=''">

    <xacro:property name="ns" value='${namespace + "/" if namespace else ""}' />
    <xacro:property name="wheel_config" value="${xacro.load_yaml(wheel_config_file)}" />
    <xacro:property name="wheelbase" value="0.2542" />
    <xacro:property name="wheel_mount_point_y" value="0.31301" />

    <xacro:include filename="$(find rover_description)/urdf/rover_a1/base.urdf.xacro" ns="body" />
    <xacro:include filename="$(find rover_description)/urdf/common/wheel.urdf.xacro" ns="wheel" />
    
    <xacro:body.body
      wheel_radius="${wheel_config['wheel_radius']}"
      imu_xyz="${imu_xyz}"
      imu_rpy="${imu_rpy}" />
      
    <xacro:wheel.wheel
      config="${wheel_config}"
      mount_point_x="${wheelbase}"
      mount_point_y="${wheel_mount_point_y}"
      prefix="fl" />

    <xacro:wheel.wheel
      config="${wheel_config}"
      mount_point_x="${wheelbase}"
      mount_point_y="${wheel_mount_point_y}"
      prefix="fr" />

    <xacro:wheel.wheel
      config="${wheel_config}"
      mount_point_x="${wheelbase}"
      mount_point_y="${wheel_mount_point_y}"
      prefix="rl" />

    <xacro:wheel.wheel
      config="${wheel_config}"
      mount_point_x="${wheelbase}"
      mount_point_y="${wheel_mount_point_y}"
      prefix="rr" />

    <!-- ROS2 Controller -->
    <ros2_control name="${ns}rover_system" type="system">
      <joint name="fl_wheel_base_to_fl_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
        <state_interface name="effort" />
      </joint>
      <joint name="fr_wheel_base_to_fr_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
        <state_interface name="effort" />
      </joint>
      <joint name="rl_wheel_base_to_rl_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
        <state_interface name="effort" />
      </joint>
      <joint name="rr_wheel_base_to_rr_wheel_joint">
        <command_interface name="velocity" />
        <state_interface name="position" />
        <state_interface name="velocity" />
        <state_interface name="effort" />
      </joint>

      <hardware>
        <xacro:if value="${use_sim}">
          <!-- Gazebo simulation system contorller -->
          <plugin>gz_ros2_control/GazeboSimSystem</plugin>
        </xacro:if>

        <xacro:unless value="${use_sim}">
          <!-- Hardware controller system interface -->
          <plugin>rover_hardware_interface/RoverA1System</plugin>
        </xacro:unless>
      </hardware>
    </ros2_control>

    <xacro:unless value="${use_sim}">
      <ros2_control name="${ns}imu" type="sensor">
        <hardware>
          <!-- Hardware IMU sensor interface  -->
          <plugin>rover_hardware_interface/PhidgetImuSensor</plugin>
          <param name="serial">-1</param>
          <param name="hub_port">0</param>
          <param name="data_interval_ms">8</param>
          <param name="callback_delta_epsilon_ms">1</param>

          <!-- Madgwick Filter Params -->
          <param name="gain">0.00304</param>
          <param name="zeta">0.00151</param>
          <param name="mag_bias_x">0.0</param>
          <param name="mag_bias_y">0.0</param>
          <param name="mag_bias_z">0.0</param>
          <param name="use_mag">true</param>
          <param name="stateless">false</param>
          <param name="remove_gravity_vector">false</param>
          <param name="world_frame">enu</param>
        </hardware>

        <sensor name="${ns}imu">
          <state_interface name="orientation.x" />
          <state_interface name="orientation.y" />
          <state_interface name="orientation.z" />
          <state_interface name="orientation.w" />
          <state_interface name="angular_velocity.x" />
          <state_interface name="angular_velocity.y" />
          <state_interface name="angular_velocity.z" />
          <state_interface name="linear_acceleration.x" />
          <state_interface name="linear_acceleration.y" />
          <state_interface name="linear_acceleration.z" />
        </sensor>
      </ros2_control>
    </xacro:unless>

    <xacro:if value="${use_sim}">
      <!-- Gazebo simulation system contorller plugin -->
      <gazebo>
        <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
        <parameters>${controller_config_file}</parameters>
          <ros>
            <namespace>$(arg namespace)</namespace>
            <remapping>drive_controller/cmd_vel:=cmd_vel</remapping>
            <remapping>drive_controller/odom:=odometry/wheels</remapping>
            <remapping>drive_controller/transition_event:=drive_controller/_transition_event</remapping>
            <remapping>joint_state_broadcaster/transition_event:=joint_state_broadcaster/_transition_event</remapping> 
          </ros>
        </plugin>
      </gazebo>
    </xacro:if>
  </xacro:macro>

</robot>